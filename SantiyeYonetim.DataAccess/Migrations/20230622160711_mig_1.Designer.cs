// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SantiyeYonetim.DataAccess.Concrete.EntityFramework;

namespace SantiyeYonetim.DataAccess.Migrations
{
    [DbContext(typeof(SantiyeYonetimContext))]
    [Migration("20230622160711_mig_1")]
    partial class mig_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Semih İnşaat",
                            Description = "Description"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Halil İnşaat",
                            Description = "Deneme Açıklaması"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Hamza İnşaat",
                            Description = "Deneme Açıklaması2"
                        });
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Productions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description",
                            Name = "Kolon Demir İmalatı"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description",
                            Name = "Kolon Beton Dökümü İmalatı"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description",
                            Name = "Döşeme Demir İmalatı"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description",
                            Name = "Döşeme Kalıp İmalatı"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description",
                            Name = "Kara Sıva İmalatı"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Description",
                            Name = "Duvar İmalatı"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Description",
                            Name = "Fayans İmalatı"
                        });
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ProjectTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProjectTypeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ProjectBlocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A Block"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B Block"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C Block"
                        },
                        new
                        {
                            Id = 4,
                            Name = "D Block"
                        },
                        new
                        {
                            Id = 5,
                            Name = "E Block"
                        },
                        new
                        {
                            Id = 6,
                            Name = "F Block"
                        });
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ProjectFloors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1. Kat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2. Kat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "3. Kat"
                        },
                        new
                        {
                            Id = 4,
                            Name = "4. Kat"
                        },
                        new
                        {
                            Id = 5,
                            Name = "5. Kat"
                        },
                        new
                        {
                            Id = 6,
                            Name = "6. Kat"
                        },
                        new
                        {
                            Id = 7,
                            Name = "7. Kat"
                        });
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminNote")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("CompletionStatus")
                        .HasColumnType("bit");

                    b.Property<string>("DrawingFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectBlockId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectFloorId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectProductionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedPeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNote")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ProductionId");

                    b.HasIndex("ProjectBlockId");

                    b.HasIndex("ProjectFloorId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectProductionTypeId");

                    b.ToTable("ProjectProductions");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectProductionImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectProductionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectProductionId");

                    b.ToTable("ProjectProductionImages");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectProductionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ProjectProductionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kaba İşler"
                        },
                        new
                        {
                            Id = 2,
                            Name = "İnce İşler"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Temel"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fore Kazık"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dsm"
                        });
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description",
                            Name = "Konut Projesi"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description",
                            Name = "Hidroelektrik Santral Projesi"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description",
                            Name = "Hastane Projesi"
                        });
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "8d31653f-60d1-4d9f-a8a4-b0aaa4fde466",
                            Description = "Admin Account",
                            Name = "Admin",
                            NormalizedName = "ADMİN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "dbbb9fa0-5e1a-441e-b444-2a5c95437eea",
                            Description = "User Account",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "33d24080-d445-452e-ba3b-cbda15893d27",
                            Description = "ProjectAdmin Account",
                            Name = "ProjectAdmin",
                            NormalizedName = "PROJECTADMİN"
                        });
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.Project", b =>
                {
                    b.HasOne("SantiyeYonetim.Entities.Concrete.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantiyeYonetim.Entities.Concrete.ProjectType", "ProjectType")
                        .WithMany()
                        .HasForeignKey("ProjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ProjectType");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectProduction", b =>
                {
                    b.HasOne("SantiyeYonetim.Entities.Concrete.Production", "Production")
                        .WithMany()
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantiyeYonetim.Entities.Concrete.ProjectBlock", "ProjectBlock")
                        .WithMany()
                        .HasForeignKey("ProjectBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantiyeYonetim.Entities.Concrete.ProjectFloor", "ProjectFloor")
                        .WithMany()
                        .HasForeignKey("ProjectFloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantiyeYonetim.Entities.Concrete.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantiyeYonetim.Entities.Concrete.ProjectProductionType", "ProjectProductionType")
                        .WithMany()
                        .HasForeignKey("ProjectProductionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Production");

                    b.Navigation("Project");

                    b.Navigation("ProjectBlock");

                    b.Navigation("ProjectFloor");

                    b.Navigation("ProjectProductionType");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectProductionImage", b =>
                {
                    b.HasOne("SantiyeYonetim.Entities.Concrete.ProjectProduction", "ProjectProduction")
                        .WithMany("ProjectProductionImages")
                        .HasForeignKey("ProjectProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectProduction");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.RoleClaim", b =>
                {
                    b.HasOne("SantiyeYonetim.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.UserClaim", b =>
                {
                    b.HasOne("SantiyeYonetim.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.UserLogin", b =>
                {
                    b.HasOne("SantiyeYonetim.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.UserRole", b =>
                {
                    b.HasOne("SantiyeYonetim.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantiyeYonetim.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.UserToken", b =>
                {
                    b.HasOne("SantiyeYonetim.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.Company", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("SantiyeYonetim.Entities.Concrete.ProjectProduction", b =>
                {
                    b.Navigation("ProjectProductionImages");
                });
#pragma warning restore 612, 618
        }
    }
}
